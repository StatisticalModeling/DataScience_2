---
title: "A Review of R Modeling Fundamentals"
author: "STT 3860"
format: html
editor: source
---

```{r}
library(tidyverse)
library(tidymodels)
tidymodels_prefer()
```

```{r setup, include=FALSE}
knitr::opts_chunk$set(comment = NA, fig.align = 'center',
                      prompt = FALSE, warning = FALSE, 
                      message = FALSE)
```


## An Example

```{r}
library(modeldata) # Used for the data crickets
names(crickets)
```

* Plot the chirp rate on the y-axis and the temperature on the x-axis, colored by species.

```{r}
ggplot(data = crickets, 
       aes(x = temp, 
           y = rate, 
           color = species)) + 
  geom_point()
```

```{r}
ggplot(data = crickets, 
       aes(x = temp, 
           y = rate, 
           color = species,
           pch = species)) + 
  geom_point()
```
```{r}
ggplot(data = crickets, 
       aes(x = temp, 
           y = rate, 
           color = species,
           pch = species,
           lty = species)) + 
  geom_point(size = 2) + 
  geom_smooth(method = "lm", se = FALSE, alpha = 0.5) + 
  theme_bw()
```

```{r}
ggplot(data = crickets, 
       aes(x = temp, 
           y = rate, 
           color = species,
           pch = species,
           lty = species)) + 
  geom_point(size = 2) + 
  geom_smooth(method = "lm", se = FALSE, alpha = 0.5) + 
  scale_color_brewer(palette = "Paired") + 
  theme_bw() + 
  labs(x = "Temperature (C)", y = "Chirp Rate (per minute)") + 
  theme(legend.position = "top")
```

* The variable `species` is stored in `R` as a `r class(crickets$species)`.  Most models need to encode the species data in a numeric format. The model formula `rate ~ temp + species`, will automatically encode the `species` column by adding a new numeric column that has a `0` when the species is `O. exclamationis` and a `1` when the species is `O. niveus`.

```{r}
mod_lm <- lm(rate ~ temp + species, data = crickets)
model.matrix(mod_lm) |> 
  bind_cols(SPECIES = crickets$species)
```


:::{.callout-tip}
There are four levels to the variable `heating`.  The model formula automatically adds three additional binary columns that are binary indicators for three of the heating types.  The reference level of the factor (i.e., the first level) is omitted.
:::

```{r}
library(PASWR2) # For VIT2005
# heating has four levels
mod_example <- lm(totalprice ~ area + heating, data = VIT2005)
model.matrix(mod_example) |> 
  bind_cols(HEATING = VIT2005$heating)
```

* The model formula `rate ~ temp + species` creates a model with different y-intercepts for each species and the same slope.

```{r}
mod_lm
# The following may be easier to understand
mod_lm2 <- lm(rate ~ temp + species + 0, data = crickets)
mod_lm2
```

* To get different slopes for each species, consider adding an interaction with one of the following:

```{r}
mod_int1 <- lm(rate ~ temp + species + temp:species, 
               data = crickets)
mod_int1
mod_int2 <- lm(rate ~ temp*species, 
               data = crickets)
mod_int2
mod_int3 <- lm(rate ~ (temp + species)^2, 
               data = crickets)
mod_int3
```

Write out the two separate lines from `mod_int1`.

$$\widehat{\text{rate}} = (-11.041) + (3.751)\cdot \text{temp}$$

$$\widehat{\text{rate}} = (-11.041 -4.348) + (3.751 - 0.234)\cdot \text{temp}$$

* The output/models may be easier to understand with:

```{r}
mod_int4 <- lm(rate ~ (temp + species + temp:species) + 0, 
               data = crickets)
mod_int4
```

## Is the interaction term warranted?

```{r}
mod_reduced <- lm(rate ~ temp + species,
                  data = crickets)
mod_full <- lm(rate ~ temp + species + temp:species,
               data = crickets)
anova(mod_reduced, mod_full) |> 
  tidy() -> ans
ans |> 
  knitr::kable()
```

The p-value of `r round(ans$p.value[2], 2)` suggests $\beta_3 = 0$. The interaction term is not warranted and should be dropped from the model.

The model is a parallel slopes model and is shown in @fig-parallel.

```{r}
#| label: "fig-parallel"
#| fig-cap: "Parallel slopes model of chirp rate versus temperature for different species"
ggplot(data = crickets, 
       aes(x = temp, 
           y = rate, 
           color = species,
           pch = species,
           lty = species)) + 
  geom_point(size = 2) + 
  moderndive::geom_parallel_slopes(se = FALSE, alpha = 0.5) + 
  scale_color_brewer(palette = "Paired") + 
  theme_bw() + 
  labs(x = "Temperature (C)", y = "Chirp Rate (per minute)") + 
  theme(legend.position = "top")
```









